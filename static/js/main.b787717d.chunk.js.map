{"version":3,"sources":["components/InputForm/ContactList/ContactList.js","components/InputForm/FilterContacts/FilterContacts.js","components/InputForm/InputForm.js","App.js","index.js"],"names":["ContactList","filteredContacts","deleteContact","map","e","name","number","onClick","id","FilterContacts","filtered","type","placeholder","onChange","InputForm","state","contacts","filter","handleChange","target","setState","value","handleSubmit","preventDefault","newName","includes","alert","createContact","singleContact","generate","filterContacts","toLowerCase","changiF1ilter","prevState","localStorage","getItem","this","JSON","parse","_","contactList","setItem","stringify","onSubmit","pattern","title","required","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEaA,EAAc,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,iBAAkBC,EAAoB,EAApBA,cAC3C,OAAO,6BAAKD,GAAoBA,EAAiBE,KAAI,SAAAC,GAAC,OAAI,+BAAgBA,EAAEC,KAAlB,MAA2BD,EAAEE,OAA7B,IAAqC,wBAAQC,QAAS,kBAAIL,EAAcE,EAAEI,KAArC,sBAA5BJ,EAAEI,UCA5DC,EAAiB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAE9B,OAEI,qCACG,uDACE,uBACAC,KAAK,OACLN,KAAK,SACLO,YAAY,eACZC,SAAUH,QCRAI,E,4MAEnBC,MAAQ,CACNC,SAAU,CACR,CAACR,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC5C,CAACE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC7C,CAACE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC5C,CAACE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,cAE/CD,KAAM,GACNY,OAAQ,GACRX,OAAQ,I,EAiBVY,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OAChB,EAAKC,SAAL,eACGD,EAAOd,KAAOc,EAAOE,S,EAG1BC,aAAe,SAAAlB,GACbA,EAAEmB,iBACF,IAAMC,EAAU,EAAKT,MAAMC,SAASb,KAAI,SAAAC,GAAC,OAAGA,EAAEC,QAC9C,GAAImB,EAAQC,SAASrB,EAAEe,OAAOd,KAAKgB,OAAQ,OAAOK,MAAM,GAAD,OAAItB,EAAEe,OAAOd,KAAKgB,MAAlB,0BACvD,EAAKM,iB,EAEPA,cAAgB,WACd,MAAgC,EAAKZ,MAA9BV,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAOU,EAApB,EAAoBA,SACdY,EAAgB,CACpBvB,OACAC,SACAE,GAAIqB,eAEN,EAAKT,SAAS,CAACJ,SAAS,GAAD,mBAAMA,GAAN,CAAgBY,O,EAEzCE,eAAiB,SAAC1B,GAEhB,MAA0B,EAAKW,MAAxBC,EAAP,EAAOA,SAASC,EAAhB,EAAgBA,OAChB,GAAGD,EACD,OAAOA,EAASC,QAAO,SAACb,GAAD,OAAOA,EAAEC,KAAK0B,cAAcN,SAASR,O,EAKhEe,cAAgB,YAAe,IAAbb,EAAY,EAAZA,OAChB,EAAKC,SAAS,CAACH,OAAOE,EAAOE,S,EAE/BnB,cAAgB,SAACM,GAChB,EAAKY,UAAS,SAACa,GAAD,MAAc,CAACjB,SAASiB,EAAUjB,SAASC,QAAO,SAAAb,GAAC,OAAEA,EAAEI,KAAMA,U,uDA9C5E,WACK0B,aAAaC,QAAQ,gBACtBC,KAAKhB,SAAS,CAACJ,SAASqB,KAAKC,MAAMJ,aAAaC,QAAQ,oB,gCAK5D,SAAmBI,EAAGC,GACpBN,aAAaO,QAAQ,cAAeJ,KAAKK,UAAUN,KAAKrB,MAAMC,a,oBAwChE,WAEE,OACI,qCACA,uBAAM2B,SAAUP,KAAKd,aAArB,UACE,2CACA,sCACA,uBACEX,KAAK,OACLN,KAAK,OACLuC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRjC,SAAUuB,KAAKlB,eAEjB,wCACD,uBACGP,KAAK,MACLN,KAAK,SACLuC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRjC,SAAUuB,KAAKlB,eAEjB,wBAAQP,KAAK,SAAb,4BAGA,cAAC,EAAD,CAAgBD,SAAU0B,KAAKJ,gBAE/B,0CACA,cAAC,EAAD,CAAa/B,iBAAkBmC,KAAKN,iBAAkB5B,cAAekC,KAAKlC,uB,GA7F7C6C,aCExBC,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b787717d.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"\n\nexport const ContactList = ({filteredContacts, deleteContact }) => {\n    return(<ul>{filteredContacts && filteredContacts.map(e => <li key={e.id}>{e.name} : {e.number} <button onClick={()=>deleteContact(e.id)}>Delete</button></li>)    }</ul>)\n   \n}\n\nContactList.propTypes={\n    filteredContacts:PropTypes.arrayOf(Object).isRequired,\n    deleteContact:PropTypes.func.isRequired,\n  }","import React from 'react'\nimport PropTypes from \"prop-types\"\n\nexport const FilterContacts = ({filtered}) => {\n  \n  return(\n     \n      <>\n         <h2>Find contacts by name</h2>\n           <input\n           type=\"text\"\n           name=\"filter\"\n           placeholder=\"start typing\"\n           onChange={filtered}\n           />\n           </>)\n\n  }\n\n\nFilterContacts.propTypes={\n   filtered:PropTypes.func.isRequired\n}","import { Component } from 'react';\nimport { v4 as generate } from 'uuid';\nimport { ContactList } from './ContactList/ContactList';\nimport { FilterContacts } from './FilterContacts/FilterContacts';\n\nexport default class InputForm extends Component {\n\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    name: '',\n    filter: '',\n    number: ''\n    \n  };\n\n  componentDidMount() {\n    if(localStorage.getItem('ContactList')) {\n      this.setState({contacts:JSON.parse(localStorage.getItem('ContactList'))})\n    }\n  \n  }\n\n  componentDidUpdate(_, contactList) {\n    localStorage.setItem('ContactList', JSON.stringify(this.state.contacts));\n  }\n  \n  \n\n  handleChange = ({ target }) => {\n    this.setState({\n      [target.name]: target.value,\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const newName = this.state.contacts.map(e=> e.name)\n    if (newName.includes(e.target.name.value)){return alert(`${e.target.name.value} says hello from chat`)}\n    this.createContact();\n  }\n  createContact = () => {\n    const {name, number,contacts} = this.state\n    const singleContact = {\n      name,\n      number,\n      id: generate(),\n    }\n    this.setState({contacts: [...contacts, singleContact]})\n  }\n  filterContacts = (e) => {\n    // if (e){this.setState({filter:e.target.value.trim()})}\n    const {contacts,filter} = this.state\n    if(contacts){\n      return contacts.filter((e) => e.name.toLowerCase().includes(filter))\n    }\n    \n  }\n\n  changiF1ilter = ({target}) => {\n    this.setState({filter:target.value})\n  }\n  deleteContact = (id) => {\n   this.setState((prevState)=>({contacts:prevState.contacts.filter(e=>e.id !==id)}))\n  }\n  render() {\n\n    return (\n        <>\n        <form onSubmit={this.handleSubmit}>\n          <h1>Phonebook</h1>\n          <h2>Name</h2>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n          <h2>Number</h2>\n         <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\">Add contact</button>\n          </form>\n          \n          <FilterContacts filtered={this.changiF1ilter} />\n          \n          <h3>Contacts</h3>\n          <ContactList filteredContacts={this.filterContacts()} deleteContact={this.deleteContact}/>\n        </>\n\n    );\n  }\n}","import React from \"react\";\nimport InputForm from \"./components/InputForm/InputForm\";\n\nfunction App() {\n  return <InputForm />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}